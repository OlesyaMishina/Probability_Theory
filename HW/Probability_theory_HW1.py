#!/usr/bin/env python
# coding: utf-8

# ### 1. Из колоды в 52 карты извлекаются случайным образом 4 карты. 
# ### a) Найти вероятность того, что все карты – крести.

# In[4]:


P_трефы=round(13/52*12/51*11/50*10/49,4)
P_трефы


# Или используя формулу подсчета количества сочетаний по k элементов из множества n и определение вероятности.
# P(4трефы)=m/n, m количество благоприятных исходов извлечь 4 трефы из 13 возможных, n все возможные варианты извлечь 4 карты из 52.

# In[6]:


from math import factorial
def combinations(n, k):
    return factorial(n)/(factorial(k)*factorial(n-k))


# In[8]:


m=combinations(13, 4)
print(f'm = {m}')


# In[9]:


n=combinations(52,4)
print(f'n = {n}')


# In[12]:


P_трефы=m/n
print(f' P_трефы= {round(P_трефы,4)}')


#  ### б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.
# 

# P_один_туз посчитаем как разницу вероястности всех возможных событий (n) и событый когда туза не попалось (сочетания 4 элементов из 48).

# In[17]:


P_один_туз=round(1 - combinations(48, 4)/n, 4)
print(f'P_один_туз = {P_один_туз}')


# ### 2. На входной двери подъезда установлен кодовый замок, содержащий десять кнопок с цифрами от 0 до 9. Код содержит три цифры, которые нужно нажать одновременно. Какова вероятность того, что человек, не знающий код, откроет дверь с первой попытки?

# In[19]:


P=round(1/combinations(10, 3),4)
print(f'P = {P}')


# ### 3. В ящике имеется 15 деталей, из которых 9 окрашены. Рабочий случайным образом извлекает 3 детали. Какова вероятность того, что все извлеченные детали окрашены?

# In[20]:


P=round(combinations(9, 3)/combinations(15, 3), 4)
print(f'P = {P}')


# ### 4. В лотерее 100 билетов. Из них 2 выигрышных. Какова вероятность того, что 2 приобретенных билета окажутся выигрышными?

# In[22]:


P=round(1/combinations(100,2),4)
print(f'P = {P}')

